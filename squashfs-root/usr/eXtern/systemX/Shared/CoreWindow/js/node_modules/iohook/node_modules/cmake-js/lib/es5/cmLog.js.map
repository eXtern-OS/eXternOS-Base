{"version":3,"names":[],"mappings":"","sources":["cmLog.js"],"sourcesContent":["\"use strict\";\r\nlet log = require(\"npmlog\");\r\n\r\nfunction CMLog(options) {\r\n    this.options = options || {};\r\n    this.debug = require(\"debug\")(this.options.logName || \"cmake-js\");\r\n}\r\n\r\nObject.defineProperties(CMLog.prototype, {\r\n    level: {\r\n        get: function() {\r\n            if (this.options.noLog) {\r\n                return \"silly\";\r\n            }\r\n            else {\r\n                return log.level;\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nCMLog.prototype.silly = function(cat, msg) {\r\n    if (this.options.noLog) {\r\n        this.debug(cat + \": \" + msg);\r\n    }\r\n    else {\r\n        log.silly(cat, msg);\r\n    }\r\n};\r\n\r\nCMLog.prototype.verbose = function(cat, msg) {\r\n    if (this.options.noLog) {\r\n        this.debug(cat + \": \" + msg);\r\n    }\r\n    else {\r\n        log.verbose(cat, msg);\r\n    }\r\n};\r\n\r\nCMLog.prototype.info = function(cat, msg) {\r\n    if (this.options.noLog) {\r\n        this.debug(cat + \": \" + msg);\r\n    }\r\n    else {\r\n        log.info(cat, msg);\r\n    }\r\n};\r\n\r\nCMLog.prototype.warn = function(cat, msg) {\r\n    if (this.options.noLog) {\r\n        this.debug(cat + \": \" + msg);\r\n    }\r\n    else {\r\n        log.warn(cat, msg);\r\n    }\r\n};\r\n\r\nCMLog.prototype.http = function(cat, msg) {\r\n    if (this.options.noLog) {\r\n        this.debug(cat + \": \" + msg);\r\n    }\r\n    else {\r\n        log.http(cat, msg);\r\n    }\r\n};\r\n\r\nCMLog.prototype.error = function(cat, msg) {\r\n    if (this.options.noLog) {\r\n        this.debug(cat + \": \" + msg);\r\n    }\r\n    else {\r\n        log.error(cat, msg);\r\n    }\r\n};\r\n\r\nmodule.exports = CMLog;"],"file":"cmLog.js"}