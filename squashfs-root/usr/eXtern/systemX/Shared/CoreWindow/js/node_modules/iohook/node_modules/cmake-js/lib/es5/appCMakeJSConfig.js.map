{"version":3,"names":[],"mappings":"","sources":["appCMakeJSConfig.js"],"sourcesContent":["\"use strict\";\r\nlet path = require(\"path\");\r\nlet _ = require(\"lodash\");\r\n\r\nfunction getConfig(lookPath, log) {\r\n    let pjsonPath = path.join(lookPath, \"package.json\");\r\n    log.silly(\"CFG\", \"Looking for package.json in: '\" + pjsonPath + \"'.\");\r\n    try {\r\n        let json = require(pjsonPath);\r\n        log.silly(\"CFG\", \"Loaded:\\n\" + JSON.stringify(json));\r\n        if (_.isPlainObject(json) && _.isPlainObject(json[\"cmake-js\"])) {\r\n            log.silly(\"CFG\", \"Config found.\");\r\n            return json[\"cmake-js\"];\r\n        }\r\n        else {\r\n            log.silly(\"CFG\", \"Config not found.\");\r\n            return null;\r\n        }\r\n    }\r\n    catch (e) {\r\n        log.silly(\"CFG\", \"'package.json' not found.\");\r\n        return null;\r\n    }\r\n}\r\n\r\nmodule.exports = function (projectPath, log) {\r\n    log.verbose(\"CFG\", \"Looking for application level CMake.js config in '\" + projectPath + \".\");\r\n    let currPath = projectPath;\r\n    let lastConfig = null;\r\n    let currConfig;\r\n    for (; ;) {\r\n        currConfig = getConfig(currPath, log);\r\n        if (currConfig) {\r\n            lastConfig = currConfig;\r\n        }\r\n        try {\r\n            log.silly(\"CFG\", \"Looking for parent path.\");\r\n            let lastPath = currPath;\r\n            currPath = path.normalize(path.join(currPath, \"..\"));\r\n            if (lastPath === currPath) {\r\n                currPath = null; // root\r\n            }\r\n            if (currPath) {\r\n                log.silly(\"CFG\", \"Parent path: '\" + currPath + \"'.\");\r\n            }\r\n        }\r\n        catch (e) {\r\n            log.silly(\"CFG\", \"Exception:\\n\" + e.stack);\r\n            break;\r\n        }\r\n        if (currPath === null) {\r\n            log.silly(\"CFG\", \"Parent path with package.json file doesn't exists. Done.\");\r\n            break;\r\n        }\r\n    }\r\n    if (lastConfig) {\r\n        log.verbose(\"CFG\", \"Application level CMake.js config found:\\n\" + JSON.stringify(lastConfig));\r\n    }\r\n    else {\r\n        log.verbose(\"CFG\", \"Application level CMake.js config doesn't exists.\");\r\n    }\r\n    return lastConfig;\r\n};\r\n"],"file":"appCMakeJSConfig.js"}