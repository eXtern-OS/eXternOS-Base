{"version":3,"names":[],"mappings":"","sources":["environment.js"],"sourcesContent":["\"use strict\";\r\nlet os = require(\"os\");\r\nlet isIOJS = require(\"is-iojs\");\r\nlet which = require(\"which\");\r\nlet _ = require(\"lodash\");\r\n\r\nlet environment = module.exports = {\r\n    moduleVersion: require(\"../../package.json\").version,\r\n    platform: os.platform(),\r\n    isWin: os.platform() === \"win32\",\r\n    isLinux: os.platform() === \"linux\",\r\n    isOSX: os.platform() === \"darwin\",\r\n    arch: os.arch(),\r\n    isX86: os.arch() === \"ia32\",\r\n    isX64: os.arch() === \"x64\",\r\n    isArm: os.arch() === \"arm\",\r\n    runtime: isIOJS ? \"iojs\" : \"node\",\r\n    runtimeVersion: process.versions.node,\r\n    home: process.env[(os.platform() === \"win32\") ? \"USERPROFILE\" : \"HOME\"],\r\n    EOL: os.EOL\r\n};\r\n\r\nObject.defineProperties(environment, {\r\n    isPosix: {\r\n        get: function () {\r\n            return !this.isWin;\r\n        }\r\n    },\r\n    _isNinjaAvailable: {\r\n        value: null,\r\n        writable: true\r\n    },\r\n    isNinjaAvailable: {\r\n        get: function() {\r\n            if (this._isNinjaAvailable === null) {\r\n                this._isNinjaAvailable = false;\r\n                try {\r\n                    if (which.sync(\"ninja\")) {\r\n                        this._isNinjaAvailable = true;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _.noop(e);\r\n                }\r\n            }\r\n            return this._isNinjaAvailable;\r\n        }\r\n    },\r\n    _isMakeAvailable: {\r\n        value: null,\r\n        writable: true\r\n    },\r\n    isMakeAvailable: {\r\n        get: function() {\r\n            if (this._isMakeAvailable === null) {\r\n                this._isMakeAvailable = false;\r\n                try {\r\n                    if (which.sync(\"make\")) {\r\n                        this._isMakeAvailable = true;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _.noop(e);\r\n                }\r\n            }\r\n            return this._isMakeAvailable;\r\n        }\r\n    },\r\n    _isGPPAvailable: {\r\n        value: null,\r\n        writable: true\r\n    },\r\n    isGPPAvailable: {\r\n        get: function() {\r\n            if (this._isGPPAvailable === null) {\r\n                this._isGPPAvailable = false;\r\n                try {\r\n                    if (which.sync(\"g++\")) {\r\n                        this._isGPPAvailable = true;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _.noop(e);\r\n                }\r\n            }\r\n            return this._isGPPAvailable;\r\n        }\r\n    },\r\n    _isClangAvailable: {\r\n        value: null,\r\n        writable: true\r\n    },\r\n    isClangAvailable: {\r\n        get: function() {\r\n            if (this._isClangAvailable === null) {\r\n                this._isClangAvailable = false;\r\n                try {\r\n                    if (which.sync(\"clang++\")) {\r\n                        this._isClangAvailable = true;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _.noop(e);\r\n                }\r\n            }\r\n            return this._isClangAvailable;\r\n        }\r\n    }\r\n});"],"file":"environment.js"}